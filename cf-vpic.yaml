Description: Create a VPC, Internet Gateway, Subnets, Route Tables and Security Groups
AWSTemplateFormatVersion: '2010-09-09'
#
#  ToDo:
#    Cluster Name
#
# MyIP      68.2.245.108
# Creating a security group that references itself
# https://gist.github.com/alanwill/9254414
#
# Using parameters
# https://curiousorbit.com/blog/cloudformation-using-parameters/
# 
# AWS Parameters
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html
#
# AWS Subnet Configuration
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html
#
# AWS Route Table Configuration
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routetable.html
#
# AWS Routes Configuration
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html
Parameters: 
  VpcCidrParameter: 
    Description: "CIDR Block For the VPC"
    Type: String
    Default: "192.168.4.0/24"
  VpcNamePrefix:
    Description: "VPC Name Prefix.  The name will be the prefix plus the region name.  Ex: vpc01-us-west-2"
    Type: String
    Default: "vpc01"
  # See the following function which splits the /24 CIDR range into 6 CIDRs with a subnet mask "/27"
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-cidr.html
  VpcAzs:
    Type: List<AWS::EC2::AvailabilityZone::Name>
    Description: "Comma-delimited list of three AZs"
    Default: "us-west-2a,us-west-2b,us-west-2c"
  InstanceType:
    Type: String
    Default: m4.large
    Description: Instance type.   (Allowed values are in order by increasing price range).  m4.large is 2vCPU, 8GB priced as $0.1/hr.
    AllowedValues:
    - t2.micro
    - t3a.small
    - t3.small
    - t3a.medium
    - t3.medium
    - t3a.large
    - c5a.large
    - t3.large
    - c5.large
    - c6i.large
    - c5ad.large
    - m5a.large
    - m6a.large
    - t2.large
    - c5d.large
    - m5.large
    - m6i.large
    - c4.large
    - m4.large
    - m5ad.large
    - c5n.large
    - m5d.large
    - r5a.large
    - m5n.large
    - r5.large
    - r6i.large
    - c1.medium
    - r5ad.large
    - m3.large
    - r4.large
    - m5dn.large
    - r5d.large
    - r5b.large
    - r5n.large
    - t3a.xlarge
    - c5a.xlarge
    - i3.large
    - m5zn.large
    - r3.large
    - t3.xlarge
    - r5dn.large
    - c5.xlarge
    - c6i.xlarge
    - c5ad.xlarge
    - c5d.2xlarge
    - c5d.4xlarge
    - c5d.9xlarge
  MyIP:
    Type: String
    Description: "Your IP address.  This will be used in the security group configuration to provide SSH/RDP access to EC2 instances. A CIDR range of /32 will be appended."
    Default: "0.0.0.0"
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})
    ConstraintDescription: must be a valid IP address of the form x.x.x.x.
  KeyPairName: 
    Description: "Key Pair Name (specific to a region) to be used for the EC2 instances.  This keypair must already exist prior to runing this CloudFormation script."
    Type: "AWS::EC2::KeyPair::KeyName"
  CRDBAMIID:
    Description: "Amazon Linux AMI"
    Type: AWS::EC2::Image::Id
    Default: ami-00f7e5c52c0f43726
  ClusterName:
    Description: "The name for the Cockroach Cluster"
    Type: String
    Default: "My-CRDB-Cluster-01"
  ExistingJoinString:
    Description: "If you are joining the nodes being created here to another region, use the join string created previously (see the Output section of a previously executed stack in another region).  Otherwise, leave this as NONE."
    Type: String
    Default: NONE


Conditions: 
  UseNewJoinString: !Equals [!Ref ExistingJoinString, NONE]

Resources:
  CreateVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref "VpcCidrParameter"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: !Join ['-', [ !Ref 'VpcNamePrefix', !Ref 'AWS::Region']]

  InternetGateway01:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Join ['-', [ "ig01", !Ref 'VpcNamePrefix', !Ref 'AWS::Region']]

  VPCGatewayAttachment01:
    DependsOn: 
    - CreateVPC
    - InternetGateway01
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref InternetGateway01
      VpcId: !Ref CreateVPC

  subnet2Public:
    DependsOn: CreateVPC
    Type: AWS::EC2::Subnet
    Properties:
      # To be clear, the first line sets up the AZ, the second line substitues the AZ (a, b, c, etc) with the reference parameter value
      # AvailabilityZone: !Sub
      #   - "${AWS::Region}${AZ}"
      #   - AZ: !Select [0, !Ref VpcAzs]
      AvailabilityZone: !Select [0, !Ref VpcAzs]
      # AvailabilityZone: "us-west-2a"
      VpcId: !Ref CreateVPC
      # CidrBlock: !Select [0, !Ref SubnetIpBlocks]
      CidrBlock: !Select [ 0, !Cidr [ !Ref VpcCidrParameter, 6, 5 ]]
      Tags:
      - Key: Name
        Value: aza-pub-subnet2
      MapPublicIpOnLaunch: true
  subnet1Private:
    DependsOn: CreateVPC
    Type: AWS::EC2::Subnet
    Properties:
      # To be clear, the first line sets up the AZ, the second line substitues the AZ (a, b, c, etc) with the reference parameter value
      # AvailabilityZone: !Sub
      #   - "${AWS::Region}${AZ}"
      #   - AZ: !Select [0, !Ref VpcAzs]
      AvailabilityZone: !Select [0, !Ref VpcAzs]
      # AvailabilityZone: "us-west-2a"
      VpcId: !Ref CreateVPC
      # CidrBlock: !Select [0, !Ref SubnetIpBlocks]
      CidrBlock: !Select [ 1, !Cidr [ !Ref VpcCidrParameter, 6, 5 ]]
      Tags:
      - Key: Name
        Value: aza-pri-subnet1
      MapPublicIpOnLaunch: false
  subnet4Public:
    DependsOn: CreateVPC
    Type: AWS::EC2::Subnet
    Properties:
      # To be clear, the first line sets up the AZ, the second line substitues the AZ (a, b, c, etc) with the reference parameter value
      # AvailabilityZone: !Sub
      #   - "${AWS::Region}${AZ}"
      #   - AZ: !Select [0, !Ref VpcAzs]
      AvailabilityZone: !Select [1, !Ref VpcAzs]
      # AvailabilityZone: "us-west-2a"
      VpcId: !Ref CreateVPC
      # CidrBlock: !Select [0, !Ref SubnetIpBlocks]
      CidrBlock: !Select [ 2, !Cidr [ !Ref VpcCidrParameter, 6, 5 ]]
      Tags:
      - Key: Name
        Value: azb-pub-subnet4
      MapPublicIpOnLaunch: True
  subnet3Private:
    DependsOn: CreateVPC
    Type: AWS::EC2::Subnet
    Properties:
      # To be clear, the first line sets up the AZ, the second line substitues the AZ (a, b, c, etc) with the reference parameter value
      # AvailabilityZone: !Sub
      #   - "${AWS::Region}${AZ}"
      #   - AZ: !Select [0, !Ref VpcAzs]
      AvailabilityZone: !Select [1, !Ref VpcAzs]
      # AvailabilityZone: "us-west-2a"
      VpcId: !Ref CreateVPC
      # CidrBlock: !Select [0, !Ref SubnetIpBlocks]
      CidrBlock: !Select [ 3, !Cidr [ !Ref VpcCidrParameter, 6, 5 ]]
      Tags:
      - Key: Name
        Value: azb-pri-subnet3
      MapPublicIpOnLaunch: false
  subnet6Public:
    DependsOn: CreateVPC
    Type: AWS::EC2::Subnet
    Properties:
      # To be clear, the first line sets up the AZ, the second line substitues the AZ (a, b, c, etc) with the reference parameter value
      # AvailabilityZone: !Sub
      #   - "${AWS::Region}${AZ}"
      #   - AZ: !Select [0, !Ref VpcAzs]
      AvailabilityZone: !Select [2, !Ref VpcAzs]
      # AvailabilityZone: "us-west-2a"
      VpcId: !Ref CreateVPC
      # CidrBlock: !Select [0, !Ref SubnetIpBlocks]
      CidrBlock: !Select [ 4, !Cidr [ !Ref VpcCidrParameter, 6, 5 ]]
      Tags:
      - Key: Name
        Value: azc-pub-subnet6
      MapPublicIpOnLaunch: True
  subnet5Private:
    DependsOn: CreateVPC
    Type: AWS::EC2::Subnet
    Properties:
      # To be clear, the first line sets up the AZ, the second line substitues the AZ (a, b, c, etc) with the reference parameter value
      # AvailabilityZone: !Sub
      #   - "${AWS::Region}${AZ}"
      #   - AZ: !Select [0, !Ref VpcAzs]
      AvailabilityZone: !Select [2, !Ref VpcAzs]
      # AvailabilityZone: "us-west-2a"
      VpcId: !Ref CreateVPC
      # CidrBlock: !Select [0, !Ref SubnetIpBlocks]
      CidrBlock: !Select [ 5, !Cidr [ !Ref VpcCidrParameter, 6, 5 ]]
      Tags:
      - Key: Name
        Value: azc-pri-subnet5
      MapPublicIpOnLaunch: false

  routeTable01Private:
    DependsOn: CreateVPC
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
      - Key: Name
        Value: rt01-private
      VpcId: !Ref CreateVPC
  routeTable02Public:
    DependsOn: CreateVPC
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
      - Key: Name
        Value: rt02-public
      VpcId: !Ref CreateVPC
  privateSubnetRouteAssociations1:
    DependsOn: 
    - subnet1Private
    - routeTable01Private
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: subnet1Private
      RouteTableId:
        Ref: routeTable01Private
  privateSubnetRouteAssociations2:
    DependsOn:
    - routeTable01Private
    - subnet3Private
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: subnet3Private
      RouteTableId:
        Ref: routeTable01Private
  privateSubnetRouteAssociations3:
    DependsOn:
    - routeTable01Private
    - subnet5Private
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: subnet5Private
      RouteTableId:
        Ref: routeTable01Private
  publicSubnetRouteAssociations1:
    DependsOn:
    - routeTable02Public
    - subnet2Public
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: subnet2Public
      RouteTableId:
        Ref: routeTable02Public
  publicSubnetRouteAssociations2:
    DependsOn:
    - routeTable02Public
    - subnet4Public
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: subnet4Public
      RouteTableId:
        Ref: routeTable02Public
  publicSubnetRouteAssociations3:
    DependsOn:
    - routeTable02Public
    - subnet6Public
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: subnet6Public
      RouteTableId:
        Ref: routeTable02Public

  InternetRoute:
    Type: AWS::EC2::Route
    DependsOn: 
    - VPCGatewayAttachment01
    - routeTable02Public
    Properties:
       RouteTableId:
         Ref: routeTable02Public
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId:
         Ref: InternetGateway01

  InstanceSecurityGroup01:
    Type: AWS::EC2::SecurityGroup
    DependsOn: CreateVPC
    Properties:
      Tags: 
      - Key: Name
        Value: sg01
      GroupDescription: Allow desktop access (SSH, RDP, Database, HTTP) to EC2 instances
      VpcId:
        Ref: CreateVPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Join ['/', [ !Ref 'MyIP', '32']]
        Description: "SSH"
      - IpProtocol: tcp
        FromPort: 3389
        ToPort: 3389
        CidrIp: !Join ['/', [ !Ref 'MyIP', '32']]
        Description: "RDP"
      - IpProtocol: tcp
        FromPort: 26257
        ToPort: 26257
        CidrIp: !Join ['/', [ !Ref 'MyIP', '32']]
        Description: "CockroachDB"
      - IpProtocol: tcp
        FromPort: 8080
        ToPort: 8080
        CidrIp: !Join ['/', [ !Ref 'MyIP', '32']]
        Description: "CockroachDB UI"
  InstanceSecurityGroup02:
    Type: AWS::EC2::SecurityGroup
    DependsOn: CreateVPC
    Properties:
      Tags: 
        - Key: Name
          Value: sg02
      GroupDescription: Allow http to client host
      VpcId:
        Ref: CreateVPC
  InstanceSecurityGroup02Ingress:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn: InstanceSecurityGroup02
    Properties: 
      GroupId: !Ref InstanceSecurityGroup02
      IpProtocol: tcp
      FromPort: 0
      ToPort: 65535
      SourceSecurityGroupId: !Ref InstanceSecurityGroup02
      Description: "Intra Node Communication"

  CRDBIPNode01:
    DependsOn: 
    - subnet2Public
    - InstanceSecurityGroup01
    - InstanceSecurityGroup02
    Type: AWS::EC2::NetworkInterface
    Properties:
      PrivateIpAddress: !Join 
      - '.' 
      - - !Select [0, !Split ['.', !Select [0, !Cidr [ !Select [ 0, !Cidr [ !Ref VpcCidrParameter, 6, 5 ]], 16, 1] ] ] ]
        - !Select [1, !Split ['.', !Select [0, !Cidr [ !Select [ 0, !Cidr [ !Ref VpcCidrParameter, 6, 5 ]], 16, 1] ] ] ]
        - !Select [2, !Split ['.', !Select [0, !Cidr [ !Select [ 0, !Cidr [ !Ref VpcCidrParameter, 6, 5 ]], 16, 1] ] ] ]
        - "4"  
      SubnetId: !Ref subnet2Public
      GroupSet:
      - !Ref InstanceSecurityGroup01
      - !Ref InstanceSecurityGroup02
      Tags:
      - Key: Name
        Value: CRDBIPNode01
  CRDBIPNode02:
    DependsOn: 
    - subnet4Public
    - InstanceSecurityGroup01
    - InstanceSecurityGroup02
    Type: AWS::EC2::NetworkInterface
    Properties:
      PrivateIpAddress: !Join 
      - '.' 
      - - !Select [0, !Split ['.', !Select [0, !Cidr [ !Select [ 2, !Cidr [ !Ref VpcCidrParameter, 6, 5 ]], 16, 1] ] ] ]
        - !Select [1, !Split ['.', !Select [0, !Cidr [ !Select [ 2, !Cidr [ !Ref VpcCidrParameter, 6, 5 ]], 16, 1] ] ] ]
        - !Select [2, !Split ['.', !Select [0, !Cidr [ !Select [ 2, !Cidr [ !Ref VpcCidrParameter, 6, 5 ]], 16, 1] ] ] ]
        - "68"  
      SubnetId: !Ref subnet4Public
      GroupSet: 
      - !Ref InstanceSecurityGroup01
      - !Ref InstanceSecurityGroup02
      Tags:
      - Key: Name
        Value: CRDBIPNode02  
  CRDBIPNode03:
    DependsOn: 
    - subnet6Public
    - InstanceSecurityGroup01
    - InstanceSecurityGroup02
    Type: AWS::EC2::NetworkInterface
    Properties:
      PrivateIpAddress: !Join 
      - '.' 
      - - !Select [0, !Split ['.', !Select [0, !Cidr [ !Select [ 4, !Cidr [ !Ref VpcCidrParameter, 6, 5 ]], 16, 1] ] ] ]
        - !Select [1, !Split ['.', !Select [0, !Cidr [ !Select [ 4, !Cidr [ !Ref VpcCidrParameter, 6, 5 ]], 16, 1] ] ] ]
        - !Select [2, !Split ['.', !Select [0, !Cidr [ !Select [ 4, !Cidr [ !Ref VpcCidrParameter, 6, 5 ]], 16, 1] ] ] ]
        - "132"  
      SubnetId: !Ref subnet6Public
      GroupSet:
      - !Ref InstanceSecurityGroup01
      - !Ref InstanceSecurityGroup02
      Tags:
      - Key: Name
        Value: CRDBIPNode03

  CRDBNode01:
    DependsOn: 
    - CRDBIPNode01
    - CRDBIPNode01
    - CRDBIPNode03
    Type: 'AWS::EC2::Instance'
    Properties:
      KeyName: !Ref KeyPairName
      Tags:
      - Key: Name
        Value: CRDB-Node-01
      InstanceType: !Ref InstanceType
      ImageId: !Ref CRDBAMIID
      UserData:
        Fn::Base64:
          !If
            - UseNewJoinString
            -
              !Sub |
                #!/bin/bash -xe
                curl https://binaries.cockroachdb.com/cockroach-v21.1.9.linux-amd64.tgz | tar -xz && cp -i cockroach-v21.1.9.linux-amd64/cockroach /usr/local/bin/
                su ec2-user -c 'mkdir /home/ec2-user/certs; mkdir /home/ec2-user/my-safe-directory'
                echo '-----BEGIN RSA PRIVATE KEY-----' > /home/ec2-user/my-safe-directory/ca.key
                echo 'MIIEowIBAAKCAQEAvQBvZGI4uUlVHD4REnyofo9D6JWQY13kSIkuOUur49paFkIf' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'mpeRSIu2u5yGf6xd7Oi3H/QnKGMlagtqt22BYqrR1IJUNMtnRSajpDBxnBlJCexy' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'BFVUEyLKlfcdP0HYx5jzazcL5u9obEeTn6c7dJU/Qrpou6DTa44YF4YpP3Rhrhs1' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'g2l6AldzJqtyfISRhL23iJz7MPScIDa4FkGcp62f1qtBt11304RNXnfrqRPEjipu' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'aHsuel04KMsOP70/psE5/QUtRQMH/MzBVbjRog1XFEtJpDd+ZIUpkqYb24aOgXLO' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'kEkbJnCQyiJBIm9jS3ilymfT0x869TXEUaPlOwIDAQABAoIBAGEttRi3TBUw+HsC' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'CsMnp3cTcMZJCKme4D7Pkh3Ro7sPTVy+eQOCxSe49qb2b018MfsbGPVsEyo3+EfT' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'QPa5blpuHF+Y93UB1MKAgIlugyvQ8HYSxfkmaolATUvYeIhK8gyGvzo0XoFKPbXX' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'A7eGRBLInnNP54P5yFs3/3kw+UpvSO/rWme06VO/itjXDMxw0q+H0CcbxQ/M9V9p' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'ptrZ4E9MzKAcCIW4vy7N7IpTGCwol6UUORJ0PeBnuj3INc1v/b015IhsTXeggb4O' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'Z6oAMZsGpo4bQLGo7Ze3Og0OyCNXHPYb2dwmgfXwedBDWZoyy72eT8Abh1FM2aBE' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'qf9ohLkCgYEAzHPeUkZRZ6rJ0v3VAXBHYYwVJJYUfGFgpMk38Uf09ha/7CWooMHU' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'tOTl+V9yCot2md2SOYmBLp/1uMyPXQbWvzhjGkv1+rYbh2VYhr2AmWx7Wq4C+PPv' >> /home/ec2-user/my-safe-directory/ca.key
                echo '9eUXkp3Qx7LwFl+jGsoHHcAVks07gNMUSiPW9xsfVAry84u4QrORbh8CgYEA7KdO' >> /home/ec2-user/my-safe-directory/ca.key
                echo 's07YmPU3l2O5Q4mQXBHkbyCp2GwOPYyvEMxF5UV5H++TOjml3eHqT9TBYUbvueH8' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'Ajk2dGsaGcxVMPxSk7AzELcfhFWH9UtSfBA/XSUPTbSp01/1PzYKlAeCH6dpf+jq' >> /home/ec2-user/my-safe-directory/ca.key
                echo '/7kJNzu3lH8PvwtxNNIC/bL5KMQPyGE64KoYLWUCgYEAmyvltHQCHLgW7bgRDkJ1' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'Kqfy9A2kBrKxct/1QX7ngE7L4yLB1SDHm3OOx7GVEEPBBA6SiHDARu7IxDUdKfGi' >> /home/ec2-user/my-safe-directory/ca.key
                echo '0was0KyOSHYmdqCIi9sP22HmTXB8eQ5LNUlmlrSIXMiGR7TWSeLDe+Tper2hR6js' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'YUjKQkmngVW+BvIoKxe2bOkCgYAsucoT9VjWP7IL+Jrw+rS/0dncbs3qyzE9zLLh' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'd9nV5PVpZbvriy2f66x+/fS2T9PKy7z3Jpz2D6/VJFsNcQKiSvC7vgBE4G1bnKqw' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'K9nt3q0vwG9ANaiCE9KX+3tKRDeaJwkS34OwXqbpd8IgFyeEFhTeoc6ZN8TL2CRq' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'hXsgSQKBgDWNl05PYGRa9NAgzGCH0+QLgWW1AxQuD7PSgZDHLNOqvPXRbzgJIM/E' >> /home/ec2-user/my-safe-directory/ca.key
                echo '3P/bKcKJAWG2muwb0m1JM8D+twaHE/QMxULkUzYtQ2nlCM6OhFYNEHkjmoB7UFA3' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'IaJVqjBQe91P0IKCSkZF7wFHz1YdKgjvSQOXlHD2I+MwyPF4UG6o' >> /home/ec2-user/my-safe-directory/ca.key
                echo '-----END RSA PRIVATE KEY-----' >> /home/ec2-user/my-safe-directory/ca.key
                echo '-----BEGIN CERTIFICATE-----' > /home/ec2-user/certs/ca.crt
                echo 'MIIDJTCCAg2gAwIBAgIQDm0RAwm/Sn2RhyT5ojkTmjANBgkqhkiG9w0BAQsFADAr' >> /home/ec2-user/certs/ca.crt
                echo 'MRIwEAYDVQQKEwlDb2Nrcm9hY2gxFTATBgNVBAMTDENvY2tyb2FjaCBDQTAeFw0y' >> /home/ec2-user/certs/ca.crt
                echo 'MTEyMjIxNzE0MTBaFw0zMTEyMzExNzE0MTBaMCsxEjAQBgNVBAoTCUNvY2tyb2Fj' >> /home/ec2-user/certs/ca.crt
                echo 'aDEVMBMGA1UEAxMMQ29ja3JvYWNoIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A' >> /home/ec2-user/certs/ca.crt
                echo 'MIIBCgKCAQEAvQBvZGI4uUlVHD4REnyofo9D6JWQY13kSIkuOUur49paFkIfmpeR' >> /home/ec2-user/certs/ca.crt
                echo 'SIu2u5yGf6xd7Oi3H/QnKGMlagtqt22BYqrR1IJUNMtnRSajpDBxnBlJCexyBFVU' >> /home/ec2-user/certs/ca.crt
                echo 'EyLKlfcdP0HYx5jzazcL5u9obEeTn6c7dJU/Qrpou6DTa44YF4YpP3Rhrhs1g2l6' >> /home/ec2-user/certs/ca.crt
                echo 'AldzJqtyfISRhL23iJz7MPScIDa4FkGcp62f1qtBt11304RNXnfrqRPEjipuaHsu' >> /home/ec2-user/certs/ca.crt
                echo 'el04KMsOP70/psE5/QUtRQMH/MzBVbjRog1XFEtJpDd+ZIUpkqYb24aOgXLOkEkb' >> /home/ec2-user/certs/ca.crt
                echo 'JnCQyiJBIm9jS3ilymfT0x869TXEUaPlOwIDAQABo0UwQzAOBgNVHQ8BAf8EBAMC' >> /home/ec2-user/certs/ca.crt
                echo 'AuQwEgYDVR0TAQH/BAgwBgEB/wIBATAdBgNVHQ4EFgQUO/9ViWjopIpC8OD5tMVT' >> /home/ec2-user/certs/ca.crt
                echo 'nxwRbMkwDQYJKoZIhvcNAQELBQADggEBALplxolVuvzzIHNfx4fPw2oCwcC4cBEW' >> /home/ec2-user/certs/ca.crt
                echo 'x/cy4al48biFM7GnuCUJvZRcll8urCiw4J5utDuzDphWjftW2KXD8ZTctVxQ3Dli' >> /home/ec2-user/certs/ca.crt
                echo 'mKBfAZPocMUKwTlBqWGNJBSuv7WDBLlIkZDHOP404vIs0Ddl+gEqarU3VS49zY7/' >> /home/ec2-user/certs/ca.crt
                echo 'Ip9YN7Ch8dBGaBK1/5O2hetnsvV9ayRgQfhcvN87CRmXIqA8/SFZ8KHq7PvWVLYa' >> /home/ec2-user/certs/ca.crt
                echo 'zsuodS2Txf3Z1n/s8h8GbYFdUFDcYk/n5Tb7/BfunsAWUPrH8/0uF3xZn+SlTRVF' >> /home/ec2-user/certs/ca.crt
                echo 'hrg+esTLJlTzrQMAZdIE7jpN/CYyP0A/usQi03LTerr2vfv00xU+Mz8=' >> /home/ec2-user/certs/ca.crt
                echo '-----END CERTIFICATE-----' >> /home/ec2-user/certs/ca.crt
                chown ec2-user:ec2-user /home/ec2-user/certs/ca.crt
                chown ec2-user:ec2-user /home/ec2-user/my-safe-directory/ca.key
                chmod 640 /home/ec2-user/certs/ca.crt
                chmod 600 /home/ec2-user/my-safe-directory/ca.key     
                echo "export ip_local=\`curl http://169.254.169.254/latest/meta-data/local-ipv4\`" >> /home/ec2-user/.bashrc
                echo "export ip_public=\`curl http://169.254.169.254/latest/meta-data/public-ipv4\`" >> /home/ec2-user/.bashrc
                echo "export aws_region=\`curl http://169.254.169.254/latest/meta-data/placement/region\`" >> /home/ec2-user/.bashrc
                echo "export aws_az=\`curl http://169.254.169.254/latest/meta-data/placement/availability-zone\`" >> /home/ec2-user/.bashrc
                echo "export JOIN_STR=${CRDBIPNode01.PrimaryPrivateIpAddress},${CRDBIPNode02.PrimaryPrivateIpAddress},${CRDBIPNode03.PrimaryPrivateIpAddress}" >> /home/ec2-user/.bashrc
                echo "export COCKROACH_CERTS_DIR=/home/ec2-user/certs" >> /home/ec2-user/.bashrc
                echo "export COCKROACH_CERTS_DIR=/home/ec2-user/certs" >> /home/ec2-user/.bashrc
                echo "export CRDBNODE=1" >> /home/ec2-user/.bashrc
                echo "STARTCRDB() {" >> /home/ec2-user/.bashrc
                echo "  cockroach start \\" >> /home/ec2-user/.bashrc
                echo '  --locality=region="$aws_region",zone="$aws_az" \' >> /home/ec2-user/.bashrc
                echo "  --certs-dir=certs \\" >> /home/ec2-user/.bashrc
                echo '  --advertise-addr=$ip_local \' >> /home/ec2-user/.bashrc
                echo '  --join=$JOIN_STR \' >> /home/ec2-user/.bashrc
                echo "  --background " >> /home/ec2-user/.bashrc
                echo " }" >> /home/ec2-user/.bashrc
                echo "CREATENODECERT() {" >> /home/ec2-user/.bashrc
                echo "  cockroach cert create-node \\" >> /home/ec2-user/.bashrc
                echo '  $ip_local \' >> /home/ec2-user/.bashrc
                echo '  $ip_public \' >> /home/ec2-user/.bashrc
                echo "  localhost \\" >> /home/ec2-user/.bashrc
                echo "  127.0.0.1 \\" >> /home/ec2-user/.bashrc
                echo "  --certs-dir=certs \\" >> /home/ec2-user/.bashrc
                echo "  --ca-key=my-safe-directory/ca.key" >> /home/ec2-user/.bashrc
                echo "}" >> /home/ec2-user/.bashrc
                echo "CREATEROOTCERT() {" >> /home/ec2-user/.bashrc
                echo "  cockroach cert create-client \\" >> /home/ec2-user/.bashrc
                echo '  root \' >> /home/ec2-user/.bashrc
                echo "  --certs-dir=certs \\" >> /home/ec2-user/.bashrc
                echo "  --ca-key=my-safe-directory/ca.key" >> /home/ec2-user/.bashrc
                echo "}" >> /home/ec2-user/.bashrc           
                sleep 2m; su ec2-user -lc 'CREATENODECERT; CREATEROOTCERT; STARTCRDB'
            -
              !Sub |
                #!/bin/bash -xe
                curl https://binaries.cockroachdb.com/cockroach-v21.1.9.linux-amd64.tgz | tar -xz && cp -i cockroach-v21.1.9.linux-amd64/cockroach /usr/local/bin/
                su ec2-user -c 'mkdir /home/ec2-user/certs; mkdir /home/ec2-user/my-safe-directory'
                echo '-----BEGIN RSA PRIVATE KEY-----' > /home/ec2-user/my-safe-directory/ca.key
                echo 'MIIEowIBAAKCAQEAvQBvZGI4uUlVHD4REnyofo9D6JWQY13kSIkuOUur49paFkIf' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'mpeRSIu2u5yGf6xd7Oi3H/QnKGMlagtqt22BYqrR1IJUNMtnRSajpDBxnBlJCexy' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'BFVUEyLKlfcdP0HYx5jzazcL5u9obEeTn6c7dJU/Qrpou6DTa44YF4YpP3Rhrhs1' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'g2l6AldzJqtyfISRhL23iJz7MPScIDa4FkGcp62f1qtBt11304RNXnfrqRPEjipu' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'aHsuel04KMsOP70/psE5/QUtRQMH/MzBVbjRog1XFEtJpDd+ZIUpkqYb24aOgXLO' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'kEkbJnCQyiJBIm9jS3ilymfT0x869TXEUaPlOwIDAQABAoIBAGEttRi3TBUw+HsC' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'CsMnp3cTcMZJCKme4D7Pkh3Ro7sPTVy+eQOCxSe49qb2b018MfsbGPVsEyo3+EfT' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'QPa5blpuHF+Y93UB1MKAgIlugyvQ8HYSxfkmaolATUvYeIhK8gyGvzo0XoFKPbXX' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'A7eGRBLInnNP54P5yFs3/3kw+UpvSO/rWme06VO/itjXDMxw0q+H0CcbxQ/M9V9p' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'ptrZ4E9MzKAcCIW4vy7N7IpTGCwol6UUORJ0PeBnuj3INc1v/b015IhsTXeggb4O' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'Z6oAMZsGpo4bQLGo7Ze3Og0OyCNXHPYb2dwmgfXwedBDWZoyy72eT8Abh1FM2aBE' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'qf9ohLkCgYEAzHPeUkZRZ6rJ0v3VAXBHYYwVJJYUfGFgpMk38Uf09ha/7CWooMHU' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'tOTl+V9yCot2md2SOYmBLp/1uMyPXQbWvzhjGkv1+rYbh2VYhr2AmWx7Wq4C+PPv' >> /home/ec2-user/my-safe-directory/ca.key
                echo '9eUXkp3Qx7LwFl+jGsoHHcAVks07gNMUSiPW9xsfVAry84u4QrORbh8CgYEA7KdO' >> /home/ec2-user/my-safe-directory/ca.key
                echo 's07YmPU3l2O5Q4mQXBHkbyCp2GwOPYyvEMxF5UV5H++TOjml3eHqT9TBYUbvueH8' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'Ajk2dGsaGcxVMPxSk7AzELcfhFWH9UtSfBA/XSUPTbSp01/1PzYKlAeCH6dpf+jq' >> /home/ec2-user/my-safe-directory/ca.key
                echo '/7kJNzu3lH8PvwtxNNIC/bL5KMQPyGE64KoYLWUCgYEAmyvltHQCHLgW7bgRDkJ1' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'Kqfy9A2kBrKxct/1QX7ngE7L4yLB1SDHm3OOx7GVEEPBBA6SiHDARu7IxDUdKfGi' >> /home/ec2-user/my-safe-directory/ca.key
                echo '0was0KyOSHYmdqCIi9sP22HmTXB8eQ5LNUlmlrSIXMiGR7TWSeLDe+Tper2hR6js' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'YUjKQkmngVW+BvIoKxe2bOkCgYAsucoT9VjWP7IL+Jrw+rS/0dncbs3qyzE9zLLh' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'd9nV5PVpZbvriy2f66x+/fS2T9PKy7z3Jpz2D6/VJFsNcQKiSvC7vgBE4G1bnKqw' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'K9nt3q0vwG9ANaiCE9KX+3tKRDeaJwkS34OwXqbpd8IgFyeEFhTeoc6ZN8TL2CRq' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'hXsgSQKBgDWNl05PYGRa9NAgzGCH0+QLgWW1AxQuD7PSgZDHLNOqvPXRbzgJIM/E' >> /home/ec2-user/my-safe-directory/ca.key
                echo '3P/bKcKJAWG2muwb0m1JM8D+twaHE/QMxULkUzYtQ2nlCM6OhFYNEHkjmoB7UFA3' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'IaJVqjBQe91P0IKCSkZF7wFHz1YdKgjvSQOXlHD2I+MwyPF4UG6o' >> /home/ec2-user/my-safe-directory/ca.key
                echo '-----END RSA PRIVATE KEY-----' >> /home/ec2-user/my-safe-directory/ca.key
                echo '-----BEGIN CERTIFICATE-----' > /home/ec2-user/certs/ca.crt
                echo 'MIIDJTCCAg2gAwIBAgIQDm0RAwm/Sn2RhyT5ojkTmjANBgkqhkiG9w0BAQsFADAr' >> /home/ec2-user/certs/ca.crt
                echo 'MRIwEAYDVQQKEwlDb2Nrcm9hY2gxFTATBgNVBAMTDENvY2tyb2FjaCBDQTAeFw0y' >> /home/ec2-user/certs/ca.crt
                echo 'MTEyMjIxNzE0MTBaFw0zMTEyMzExNzE0MTBaMCsxEjAQBgNVBAoTCUNvY2tyb2Fj' >> /home/ec2-user/certs/ca.crt
                echo 'aDEVMBMGA1UEAxMMQ29ja3JvYWNoIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A' >> /home/ec2-user/certs/ca.crt
                echo 'MIIBCgKCAQEAvQBvZGI4uUlVHD4REnyofo9D6JWQY13kSIkuOUur49paFkIfmpeR' >> /home/ec2-user/certs/ca.crt
                echo 'SIu2u5yGf6xd7Oi3H/QnKGMlagtqt22BYqrR1IJUNMtnRSajpDBxnBlJCexyBFVU' >> /home/ec2-user/certs/ca.crt
                echo 'EyLKlfcdP0HYx5jzazcL5u9obEeTn6c7dJU/Qrpou6DTa44YF4YpP3Rhrhs1g2l6' >> /home/ec2-user/certs/ca.crt
                echo 'AldzJqtyfISRhL23iJz7MPScIDa4FkGcp62f1qtBt11304RNXnfrqRPEjipuaHsu' >> /home/ec2-user/certs/ca.crt
                echo 'el04KMsOP70/psE5/QUtRQMH/MzBVbjRog1XFEtJpDd+ZIUpkqYb24aOgXLOkEkb' >> /home/ec2-user/certs/ca.crt
                echo 'JnCQyiJBIm9jS3ilymfT0x869TXEUaPlOwIDAQABo0UwQzAOBgNVHQ8BAf8EBAMC' >> /home/ec2-user/certs/ca.crt
                echo 'AuQwEgYDVR0TAQH/BAgwBgEB/wIBATAdBgNVHQ4EFgQUO/9ViWjopIpC8OD5tMVT' >> /home/ec2-user/certs/ca.crt
                echo 'nxwRbMkwDQYJKoZIhvcNAQELBQADggEBALplxolVuvzzIHNfx4fPw2oCwcC4cBEW' >> /home/ec2-user/certs/ca.crt
                echo 'x/cy4al48biFM7GnuCUJvZRcll8urCiw4J5utDuzDphWjftW2KXD8ZTctVxQ3Dli' >> /home/ec2-user/certs/ca.crt
                echo 'mKBfAZPocMUKwTlBqWGNJBSuv7WDBLlIkZDHOP404vIs0Ddl+gEqarU3VS49zY7/' >> /home/ec2-user/certs/ca.crt
                echo 'Ip9YN7Ch8dBGaBK1/5O2hetnsvV9ayRgQfhcvN87CRmXIqA8/SFZ8KHq7PvWVLYa' >> /home/ec2-user/certs/ca.crt
                echo 'zsuodS2Txf3Z1n/s8h8GbYFdUFDcYk/n5Tb7/BfunsAWUPrH8/0uF3xZn+SlTRVF' >> /home/ec2-user/certs/ca.crt
                echo 'hrg+esTLJlTzrQMAZdIE7jpN/CYyP0A/usQi03LTerr2vfv00xU+Mz8=' >> /home/ec2-user/certs/ca.crt
                echo '-----END CERTIFICATE-----' >> /home/ec2-user/certs/ca.crt
                chown ec2-user:ec2-user /home/ec2-user/certs/ca.crt
                chown ec2-user:ec2-user /home/ec2-user/my-safe-directory/ca.key
                chmod 640 /home/ec2-user/certs/ca.crt
                chmod 600 /home/ec2-user/my-safe-directory/ca.key     
                echo "export ip_local=\`curl http://169.254.169.254/latest/meta-data/local-ipv4\`" >> /home/ec2-user/.bashrc
                echo "export ip_public=\`curl http://169.254.169.254/latest/meta-data/public-ipv4\`" >> /home/ec2-user/.bashrc
                echo "export aws_region=\`curl http://169.254.169.254/latest/meta-data/placement/region\`" >> /home/ec2-user/.bashrc
                echo "export aws_az=\`curl http://169.254.169.254/latest/meta-data/placement/availability-zone\`" >> /home/ec2-user/.bashrc
                echo "export JOIN_STR=${ExistingJoinString}" >> /home/ec2-user/.bashrc
                echo "export COCKROACH_CERTS_DIR=/home/ec2-user/certs" >> /home/ec2-user/.bashrc
                echo "export CRDBNODE=1" >> /home/ec2-user/.bashrc
                echo "STARTCRDB() {" >> /home/ec2-user/.bashrc
                echo "  cockroach start \\" >> /home/ec2-user/.bashrc
                echo '  --locality=region="$aws_region",zone="$aws_az" \' >> /home/ec2-user/.bashrc
                echo "  --certs-dir=certs \\" >> /home/ec2-user/.bashrc
                echo '  --advertise-addr=$ip_local \' >> /home/ec2-user/.bashrc
                echo '  --join=$JOIN_STR \' >> /home/ec2-user/.bashrc
                echo "  --background " >> /home/ec2-user/.bashrc
                echo " }" >> /home/ec2-user/.bashrc
                echo "CREATENODECERT() {" >> /home/ec2-user/.bashrc
                echo "  cockroach cert create-node \\" >> /home/ec2-user/.bashrc
                echo '  $ip_local \' >> /home/ec2-user/.bashrc
                echo '  $ip_public \' >> /home/ec2-user/.bashrc
                echo "  localhost \\" >> /home/ec2-user/.bashrc
                echo "  127.0.0.1 \\" >> /home/ec2-user/.bashrc
                echo "  --certs-dir=certs \\" >> /home/ec2-user/.bashrc
                echo "  --ca-key=my-safe-directory/ca.key" >> /home/ec2-user/.bashrc
                echo "}" >> /home/ec2-user/.bashrc
                echo "CREATEROOTCERT() {" >> /home/ec2-user/.bashrc
                echo "  cockroach cert create-client \\" >> /home/ec2-user/.bashrc
                echo '  root \' >> /home/ec2-user/.bashrc
                echo "  --certs-dir=certs \\" >> /home/ec2-user/.bashrc
                echo "  --ca-key=my-safe-directory/ca.key" >> /home/ec2-user/.bashrc
                echo "}" >> /home/ec2-user/.bashrc                
                sleep 2m; su ec2-user -lc 'CREATENODECERT; CREATEROOTCERT; STARTCRDB'
      NetworkInterfaces:
      - DeviceIndex: '0'
        NetworkInterfaceId: !Ref CRDBIPNode01
  CRDBNode02:
    DependsOn: 
    - CRDBIPNode01
    - CRDBIPNode02
    - CRDBIPNode03
    Type: 'AWS::EC2::Instance'
    Properties:
      KeyName: !Ref KeyPairName
      Tags:
      - Key: Name
        Value: CRDB-Node-02
      InstanceType: !Ref InstanceType
      ImageId: !Ref CRDBAMIID
      UserData:
        Fn::Base64:
          !If
            - UseNewJoinString
            -
              !Sub |
                #!/bin/bash -xe
                curl https://binaries.cockroachdb.com/cockroach-v21.1.9.linux-amd64.tgz | tar -xz && cp -i cockroach-v21.1.9.linux-amd64/cockroach /usr/local/bin/
                su ec2-user -c 'mkdir /home/ec2-user/certs; mkdir /home/ec2-user/my-safe-directory'
                echo '-----BEGIN RSA PRIVATE KEY-----' > /home/ec2-user/my-safe-directory/ca.key
                echo 'MIIEowIBAAKCAQEAvQBvZGI4uUlVHD4REnyofo9D6JWQY13kSIkuOUur49paFkIf' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'mpeRSIu2u5yGf6xd7Oi3H/QnKGMlagtqt22BYqrR1IJUNMtnRSajpDBxnBlJCexy' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'BFVUEyLKlfcdP0HYx5jzazcL5u9obEeTn6c7dJU/Qrpou6DTa44YF4YpP3Rhrhs1' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'g2l6AldzJqtyfISRhL23iJz7MPScIDa4FkGcp62f1qtBt11304RNXnfrqRPEjipu' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'aHsuel04KMsOP70/psE5/QUtRQMH/MzBVbjRog1XFEtJpDd+ZIUpkqYb24aOgXLO' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'kEkbJnCQyiJBIm9jS3ilymfT0x869TXEUaPlOwIDAQABAoIBAGEttRi3TBUw+HsC' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'CsMnp3cTcMZJCKme4D7Pkh3Ro7sPTVy+eQOCxSe49qb2b018MfsbGPVsEyo3+EfT' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'QPa5blpuHF+Y93UB1MKAgIlugyvQ8HYSxfkmaolATUvYeIhK8gyGvzo0XoFKPbXX' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'A7eGRBLInnNP54P5yFs3/3kw+UpvSO/rWme06VO/itjXDMxw0q+H0CcbxQ/M9V9p' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'ptrZ4E9MzKAcCIW4vy7N7IpTGCwol6UUORJ0PeBnuj3INc1v/b015IhsTXeggb4O' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'Z6oAMZsGpo4bQLGo7Ze3Og0OyCNXHPYb2dwmgfXwedBDWZoyy72eT8Abh1FM2aBE' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'qf9ohLkCgYEAzHPeUkZRZ6rJ0v3VAXBHYYwVJJYUfGFgpMk38Uf09ha/7CWooMHU' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'tOTl+V9yCot2md2SOYmBLp/1uMyPXQbWvzhjGkv1+rYbh2VYhr2AmWx7Wq4C+PPv' >> /home/ec2-user/my-safe-directory/ca.key
                echo '9eUXkp3Qx7LwFl+jGsoHHcAVks07gNMUSiPW9xsfVAry84u4QrORbh8CgYEA7KdO' >> /home/ec2-user/my-safe-directory/ca.key
                echo 's07YmPU3l2O5Q4mQXBHkbyCp2GwOPYyvEMxF5UV5H++TOjml3eHqT9TBYUbvueH8' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'Ajk2dGsaGcxVMPxSk7AzELcfhFWH9UtSfBA/XSUPTbSp01/1PzYKlAeCH6dpf+jq' >> /home/ec2-user/my-safe-directory/ca.key
                echo '/7kJNzu3lH8PvwtxNNIC/bL5KMQPyGE64KoYLWUCgYEAmyvltHQCHLgW7bgRDkJ1' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'Kqfy9A2kBrKxct/1QX7ngE7L4yLB1SDHm3OOx7GVEEPBBA6SiHDARu7IxDUdKfGi' >> /home/ec2-user/my-safe-directory/ca.key
                echo '0was0KyOSHYmdqCIi9sP22HmTXB8eQ5LNUlmlrSIXMiGR7TWSeLDe+Tper2hR6js' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'YUjKQkmngVW+BvIoKxe2bOkCgYAsucoT9VjWP7IL+Jrw+rS/0dncbs3qyzE9zLLh' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'd9nV5PVpZbvriy2f66x+/fS2T9PKy7z3Jpz2D6/VJFsNcQKiSvC7vgBE4G1bnKqw' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'K9nt3q0vwG9ANaiCE9KX+3tKRDeaJwkS34OwXqbpd8IgFyeEFhTeoc6ZN8TL2CRq' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'hXsgSQKBgDWNl05PYGRa9NAgzGCH0+QLgWW1AxQuD7PSgZDHLNOqvPXRbzgJIM/E' >> /home/ec2-user/my-safe-directory/ca.key
                echo '3P/bKcKJAWG2muwb0m1JM8D+twaHE/QMxULkUzYtQ2nlCM6OhFYNEHkjmoB7UFA3' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'IaJVqjBQe91P0IKCSkZF7wFHz1YdKgjvSQOXlHD2I+MwyPF4UG6o' >> /home/ec2-user/my-safe-directory/ca.key
                echo '-----END RSA PRIVATE KEY-----' >> /home/ec2-user/my-safe-directory/ca.key
                echo '-----BEGIN CERTIFICATE-----' > /home/ec2-user/certs/ca.crt
                echo 'MIIDJTCCAg2gAwIBAgIQDm0RAwm/Sn2RhyT5ojkTmjANBgkqhkiG9w0BAQsFADAr' >> /home/ec2-user/certs/ca.crt
                echo 'MRIwEAYDVQQKEwlDb2Nrcm9hY2gxFTATBgNVBAMTDENvY2tyb2FjaCBDQTAeFw0y' >> /home/ec2-user/certs/ca.crt
                echo 'MTEyMjIxNzE0MTBaFw0zMTEyMzExNzE0MTBaMCsxEjAQBgNVBAoTCUNvY2tyb2Fj' >> /home/ec2-user/certs/ca.crt
                echo 'aDEVMBMGA1UEAxMMQ29ja3JvYWNoIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A' >> /home/ec2-user/certs/ca.crt
                echo 'MIIBCgKCAQEAvQBvZGI4uUlVHD4REnyofo9D6JWQY13kSIkuOUur49paFkIfmpeR' >> /home/ec2-user/certs/ca.crt
                echo 'SIu2u5yGf6xd7Oi3H/QnKGMlagtqt22BYqrR1IJUNMtnRSajpDBxnBlJCexyBFVU' >> /home/ec2-user/certs/ca.crt
                echo 'EyLKlfcdP0HYx5jzazcL5u9obEeTn6c7dJU/Qrpou6DTa44YF4YpP3Rhrhs1g2l6' >> /home/ec2-user/certs/ca.crt
                echo 'AldzJqtyfISRhL23iJz7MPScIDa4FkGcp62f1qtBt11304RNXnfrqRPEjipuaHsu' >> /home/ec2-user/certs/ca.crt
                echo 'el04KMsOP70/psE5/QUtRQMH/MzBVbjRog1XFEtJpDd+ZIUpkqYb24aOgXLOkEkb' >> /home/ec2-user/certs/ca.crt
                echo 'JnCQyiJBIm9jS3ilymfT0x869TXEUaPlOwIDAQABo0UwQzAOBgNVHQ8BAf8EBAMC' >> /home/ec2-user/certs/ca.crt
                echo 'AuQwEgYDVR0TAQH/BAgwBgEB/wIBATAdBgNVHQ4EFgQUO/9ViWjopIpC8OD5tMVT' >> /home/ec2-user/certs/ca.crt
                echo 'nxwRbMkwDQYJKoZIhvcNAQELBQADggEBALplxolVuvzzIHNfx4fPw2oCwcC4cBEW' >> /home/ec2-user/certs/ca.crt
                echo 'x/cy4al48biFM7GnuCUJvZRcll8urCiw4J5utDuzDphWjftW2KXD8ZTctVxQ3Dli' >> /home/ec2-user/certs/ca.crt
                echo 'mKBfAZPocMUKwTlBqWGNJBSuv7WDBLlIkZDHOP404vIs0Ddl+gEqarU3VS49zY7/' >> /home/ec2-user/certs/ca.crt
                echo 'Ip9YN7Ch8dBGaBK1/5O2hetnsvV9ayRgQfhcvN87CRmXIqA8/SFZ8KHq7PvWVLYa' >> /home/ec2-user/certs/ca.crt
                echo 'zsuodS2Txf3Z1n/s8h8GbYFdUFDcYk/n5Tb7/BfunsAWUPrH8/0uF3xZn+SlTRVF' >> /home/ec2-user/certs/ca.crt
                echo 'hrg+esTLJlTzrQMAZdIE7jpN/CYyP0A/usQi03LTerr2vfv00xU+Mz8=' >> /home/ec2-user/certs/ca.crt
                echo '-----END CERTIFICATE-----' >> /home/ec2-user/certs/ca.crt
                chown ec2-user:ec2-user /home/ec2-user/certs/ca.crt
                chown ec2-user:ec2-user /home/ec2-user/my-safe-directory/ca.key
                chmod 640 /home/ec2-user/certs/ca.crt
                chmod 600 /home/ec2-user/my-safe-directory/ca.key     
                echo "export ip_local=\`curl http://169.254.169.254/latest/meta-data/local-ipv4\`" >> /home/ec2-user/.bashrc
                echo "export ip_public=\`curl http://169.254.169.254/latest/meta-data/public-ipv4\`" >> /home/ec2-user/.bashrc
                echo "export aws_region=\`curl http://169.254.169.254/latest/meta-data/placement/region\`" >> /home/ec2-user/.bashrc
                echo "export aws_az=\`curl http://169.254.169.254/latest/meta-data/placement/availability-zone\`" >> /home/ec2-user/.bashrc
                echo "export COCKROACH_CERTS_DIR=/home/ec2-user/certs" >> /home/ec2-user/.bashrc
                echo "export JOIN_STR=${CRDBIPNode01.PrimaryPrivateIpAddress},${CRDBIPNode02.PrimaryPrivateIpAddress},${CRDBIPNode03.PrimaryPrivateIpAddress}" >> /home/ec2-user/.bashrc
                echo "export COCKROACH_CERTS_DIR=/home/ec2-user/certs" >> /home/ec2-user/.bashrc
                echo "export CRDBNODE=2" >> /home/ec2-user/.bashrc
                echo "STARTCRDB() {" >> /home/ec2-user/.bashrc
                echo "  cockroach start \\" >> /home/ec2-user/.bashrc
                echo '  --locality=region="$aws_region",zone="$aws_az" \' >> /home/ec2-user/.bashrc
                echo "  --certs-dir=certs \\" >> /home/ec2-user/.bashrc
                echo '  --advertise-addr=$ip_local \' >> /home/ec2-user/.bashrc
                echo '  --join=$JOIN_STR \' >> /home/ec2-user/.bashrc
                echo "  --background " >> /home/ec2-user/.bashrc
                echo " }" >> /home/ec2-user/.bashrc
                echo "CREATENODECERT() {" >> /home/ec2-user/.bashrc
                echo "  cockroach cert create-node \\" >> /home/ec2-user/.bashrc
                echo '  $ip_local \' >> /home/ec2-user/.bashrc
                echo '  $ip_public \' >> /home/ec2-user/.bashrc
                echo "  localhost \\" >> /home/ec2-user/.bashrc
                echo "  127.0.0.1 \\" >> /home/ec2-user/.bashrc
                echo "  --certs-dir=certs \\" >> /home/ec2-user/.bashrc
                echo "  --ca-key=my-safe-directory/ca.key" >> /home/ec2-user/.bashrc
                echo "}" >> /home/ec2-user/.bashrc
                echo "CREATEROOTCERT() {" >> /home/ec2-user/.bashrc
                echo "  cockroach cert create-client \\" >> /home/ec2-user/.bashrc
                echo '  root \' >> /home/ec2-user/.bashrc
                echo "  --certs-dir=certs \\" >> /home/ec2-user/.bashrc
                echo "  --ca-key=my-safe-directory/ca.key" >> /home/ec2-user/.bashrc
                echo "}" >> /home/ec2-user/.bashrc           
                sleep 2m; su ec2-user -lc 'CREATENODECERT; CREATEROOTCERT; STARTCRDB'
            -
              !Sub |
                #!/bin/bash -xe
                curl https://binaries.cockroachdb.com/cockroach-v21.1.9.linux-amd64.tgz | tar -xz && cp -i cockroach-v21.1.9.linux-amd64/cockroach /usr/local/bin/
                su ec2-user -c 'mkdir /home/ec2-user/certs; mkdir /home/ec2-user/my-safe-directory'
                echo '-----BEGIN RSA PRIVATE KEY-----' > /home/ec2-user/my-safe-directory/ca.key
                echo 'MIIEowIBAAKCAQEAvQBvZGI4uUlVHD4REnyofo9D6JWQY13kSIkuOUur49paFkIf' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'mpeRSIu2u5yGf6xd7Oi3H/QnKGMlagtqt22BYqrR1IJUNMtnRSajpDBxnBlJCexy' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'BFVUEyLKlfcdP0HYx5jzazcL5u9obEeTn6c7dJU/Qrpou6DTa44YF4YpP3Rhrhs1' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'g2l6AldzJqtyfISRhL23iJz7MPScIDa4FkGcp62f1qtBt11304RNXnfrqRPEjipu' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'aHsuel04KMsOP70/psE5/QUtRQMH/MzBVbjRog1XFEtJpDd+ZIUpkqYb24aOgXLO' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'kEkbJnCQyiJBIm9jS3ilymfT0x869TXEUaPlOwIDAQABAoIBAGEttRi3TBUw+HsC' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'CsMnp3cTcMZJCKme4D7Pkh3Ro7sPTVy+eQOCxSe49qb2b018MfsbGPVsEyo3+EfT' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'QPa5blpuHF+Y93UB1MKAgIlugyvQ8HYSxfkmaolATUvYeIhK8gyGvzo0XoFKPbXX' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'A7eGRBLInnNP54P5yFs3/3kw+UpvSO/rWme06VO/itjXDMxw0q+H0CcbxQ/M9V9p' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'ptrZ4E9MzKAcCIW4vy7N7IpTGCwol6UUORJ0PeBnuj3INc1v/b015IhsTXeggb4O' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'Z6oAMZsGpo4bQLGo7Ze3Og0OyCNXHPYb2dwmgfXwedBDWZoyy72eT8Abh1FM2aBE' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'qf9ohLkCgYEAzHPeUkZRZ6rJ0v3VAXBHYYwVJJYUfGFgpMk38Uf09ha/7CWooMHU' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'tOTl+V9yCot2md2SOYmBLp/1uMyPXQbWvzhjGkv1+rYbh2VYhr2AmWx7Wq4C+PPv' >> /home/ec2-user/my-safe-directory/ca.key
                echo '9eUXkp3Qx7LwFl+jGsoHHcAVks07gNMUSiPW9xsfVAry84u4QrORbh8CgYEA7KdO' >> /home/ec2-user/my-safe-directory/ca.key
                echo 's07YmPU3l2O5Q4mQXBHkbyCp2GwOPYyvEMxF5UV5H++TOjml3eHqT9TBYUbvueH8' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'Ajk2dGsaGcxVMPxSk7AzELcfhFWH9UtSfBA/XSUPTbSp01/1PzYKlAeCH6dpf+jq' >> /home/ec2-user/my-safe-directory/ca.key
                echo '/7kJNzu3lH8PvwtxNNIC/bL5KMQPyGE64KoYLWUCgYEAmyvltHQCHLgW7bgRDkJ1' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'Kqfy9A2kBrKxct/1QX7ngE7L4yLB1SDHm3OOx7GVEEPBBA6SiHDARu7IxDUdKfGi' >> /home/ec2-user/my-safe-directory/ca.key
                echo '0was0KyOSHYmdqCIi9sP22HmTXB8eQ5LNUlmlrSIXMiGR7TWSeLDe+Tper2hR6js' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'YUjKQkmngVW+BvIoKxe2bOkCgYAsucoT9VjWP7IL+Jrw+rS/0dncbs3qyzE9zLLh' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'd9nV5PVpZbvriy2f66x+/fS2T9PKy7z3Jpz2D6/VJFsNcQKiSvC7vgBE4G1bnKqw' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'K9nt3q0vwG9ANaiCE9KX+3tKRDeaJwkS34OwXqbpd8IgFyeEFhTeoc6ZN8TL2CRq' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'hXsgSQKBgDWNl05PYGRa9NAgzGCH0+QLgWW1AxQuD7PSgZDHLNOqvPXRbzgJIM/E' >> /home/ec2-user/my-safe-directory/ca.key
                echo '3P/bKcKJAWG2muwb0m1JM8D+twaHE/QMxULkUzYtQ2nlCM6OhFYNEHkjmoB7UFA3' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'IaJVqjBQe91P0IKCSkZF7wFHz1YdKgjvSQOXlHD2I+MwyPF4UG6o' >> /home/ec2-user/my-safe-directory/ca.key
                echo '-----END RSA PRIVATE KEY-----' >> /home/ec2-user/my-safe-directory/ca.key
                echo '-----BEGIN CERTIFICATE-----' > /home/ec2-user/certs/ca.crt
                echo 'MIIDJTCCAg2gAwIBAgIQDm0RAwm/Sn2RhyT5ojkTmjANBgkqhkiG9w0BAQsFADAr' >> /home/ec2-user/certs/ca.crt
                echo 'MRIwEAYDVQQKEwlDb2Nrcm9hY2gxFTATBgNVBAMTDENvY2tyb2FjaCBDQTAeFw0y' >> /home/ec2-user/certs/ca.crt
                echo 'MTEyMjIxNzE0MTBaFw0zMTEyMzExNzE0MTBaMCsxEjAQBgNVBAoTCUNvY2tyb2Fj' >> /home/ec2-user/certs/ca.crt
                echo 'aDEVMBMGA1UEAxMMQ29ja3JvYWNoIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A' >> /home/ec2-user/certs/ca.crt
                echo 'MIIBCgKCAQEAvQBvZGI4uUlVHD4REnyofo9D6JWQY13kSIkuOUur49paFkIfmpeR' >> /home/ec2-user/certs/ca.crt
                echo 'SIu2u5yGf6xd7Oi3H/QnKGMlagtqt22BYqrR1IJUNMtnRSajpDBxnBlJCexyBFVU' >> /home/ec2-user/certs/ca.crt
                echo 'EyLKlfcdP0HYx5jzazcL5u9obEeTn6c7dJU/Qrpou6DTa44YF4YpP3Rhrhs1g2l6' >> /home/ec2-user/certs/ca.crt
                echo 'AldzJqtyfISRhL23iJz7MPScIDa4FkGcp62f1qtBt11304RNXnfrqRPEjipuaHsu' >> /home/ec2-user/certs/ca.crt
                echo 'el04KMsOP70/psE5/QUtRQMH/MzBVbjRog1XFEtJpDd+ZIUpkqYb24aOgXLOkEkb' >> /home/ec2-user/certs/ca.crt
                echo 'JnCQyiJBIm9jS3ilymfT0x869TXEUaPlOwIDAQABo0UwQzAOBgNVHQ8BAf8EBAMC' >> /home/ec2-user/certs/ca.crt
                echo 'AuQwEgYDVR0TAQH/BAgwBgEB/wIBATAdBgNVHQ4EFgQUO/9ViWjopIpC8OD5tMVT' >> /home/ec2-user/certs/ca.crt
                echo 'nxwRbMkwDQYJKoZIhvcNAQELBQADggEBALplxolVuvzzIHNfx4fPw2oCwcC4cBEW' >> /home/ec2-user/certs/ca.crt
                echo 'x/cy4al48biFM7GnuCUJvZRcll8urCiw4J5utDuzDphWjftW2KXD8ZTctVxQ3Dli' >> /home/ec2-user/certs/ca.crt
                echo 'mKBfAZPocMUKwTlBqWGNJBSuv7WDBLlIkZDHOP404vIs0Ddl+gEqarU3VS49zY7/' >> /home/ec2-user/certs/ca.crt
                echo 'Ip9YN7Ch8dBGaBK1/5O2hetnsvV9ayRgQfhcvN87CRmXIqA8/SFZ8KHq7PvWVLYa' >> /home/ec2-user/certs/ca.crt
                echo 'zsuodS2Txf3Z1n/s8h8GbYFdUFDcYk/n5Tb7/BfunsAWUPrH8/0uF3xZn+SlTRVF' >> /home/ec2-user/certs/ca.crt
                echo 'hrg+esTLJlTzrQMAZdIE7jpN/CYyP0A/usQi03LTerr2vfv00xU+Mz8=' >> /home/ec2-user/certs/ca.crt
                echo '-----END CERTIFICATE-----' >> /home/ec2-user/certs/ca.crt
                chown ec2-user:ec2-user /home/ec2-user/certs/ca.crt
                chown ec2-user:ec2-user /home/ec2-user/my-safe-directory/ca.key
                chmod 640 /home/ec2-user/certs/ca.crt
                chmod 600 /home/ec2-user/my-safe-directory/ca.key     
                echo "export ip_local=\`curl http://169.254.169.254/latest/meta-data/local-ipv4\`" >> /home/ec2-user/.bashrc
                echo "export ip_public=\`curl http://169.254.169.254/latest/meta-data/public-ipv4\`" >> /home/ec2-user/.bashrc
                echo "export aws_region=\`curl http://169.254.169.254/latest/meta-data/placement/region\`" >> /home/ec2-user/.bashrc
                echo "export aws_az=\`curl http://169.254.169.254/latest/meta-data/placement/availability-zone\`" >> /home/ec2-user/.bashrc
                echo "export JOIN_STR=${ExistingJoinString}" >> /home/ec2-user/.bashrc
                echo "export COCKROACH_CERTS_DIR=/home/ec2-user/certs" >> /home/ec2-user/.bashrc
                echo "export CRDBNODE=2" >> /home/ec2-user/.bashrc
                echo "STARTCRDB() {" >> /home/ec2-user/.bashrc
                echo "  cockroach start \\" >> /home/ec2-user/.bashrc
                echo '  --locality=region="$aws_region",zone="$aws_az" \' >> /home/ec2-user/.bashrc
                echo "  --certs-dir=certs \\" >> /home/ec2-user/.bashrc
                echo '  --advertise-addr=$ip_local \' >> /home/ec2-user/.bashrc
                echo '  --join=$JOIN_STR \' >> /home/ec2-user/.bashrc
                echo "  --background " >> /home/ec2-user/.bashrc
                echo " }" >> /home/ec2-user/.bashrc
                echo "CREATENODECERT() {" >> /home/ec2-user/.bashrc
                echo "  cockroach cert create-node \\" >> /home/ec2-user/.bashrc
                echo '  $ip_local \' >> /home/ec2-user/.bashrc
                echo '  $ip_public \' >> /home/ec2-user/.bashrc
                echo "  localhost \\" >> /home/ec2-user/.bashrc
                echo "  127.0.0.1 \\" >> /home/ec2-user/.bashrc
                echo "  --certs-dir=certs \\" >> /home/ec2-user/.bashrc
                echo "  --ca-key=my-safe-directory/ca.key" >> /home/ec2-user/.bashrc
                echo "}" >> /home/ec2-user/.bashrc
                echo "CREATEROOTCERT() {" >> /home/ec2-user/.bashrc
                echo "  cockroach cert create-client \\" >> /home/ec2-user/.bashrc
                echo '  root \' >> /home/ec2-user/.bashrc
                echo "  --certs-dir=certs \\" >> /home/ec2-user/.bashrc
                echo "  --ca-key=my-safe-directory/ca.key" >> /home/ec2-user/.bashrc
                echo "}" >> /home/ec2-user/.bashrc                
                sleep 2m; su ec2-user -lc 'CREATENODECERT; CREATEROOTCERT; STARTCRDB'
      NetworkInterfaces:
      - DeviceIndex: '0'
        NetworkInterfaceId: !Ref CRDBIPNode02
  CRDBNode03:
    DependsOn:
    - CRDBIPNode01
    - CRDBIPNode02
    - CRDBIPNode03
    Type: 'AWS::EC2::Instance'
    Properties:
      KeyName: !Ref KeyPairName
      Tags:
      - Key: Name
        Value: CRDB-Node-03
      InstanceType: !Ref InstanceType
      ImageId: !Ref CRDBAMIID
      UserData:
        Fn::Base64:
          !If
            - UseNewJoinString
            -
              !Sub |
                #!/bin/bash -xe
                curl https://binaries.cockroachdb.com/cockroach-v21.1.9.linux-amd64.tgz | tar -xz && cp -i cockroach-v21.1.9.linux-amd64/cockroach /usr/local/bin/
                su ec2-user -c 'mkdir /home/ec2-user/certs; mkdir /home/ec2-user/my-safe-directory'
                echo '-----BEGIN RSA PRIVATE KEY-----' > /home/ec2-user/my-safe-directory/ca.key
                echo 'MIIEowIBAAKCAQEAvQBvZGI4uUlVHD4REnyofo9D6JWQY13kSIkuOUur49paFkIf' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'mpeRSIu2u5yGf6xd7Oi3H/QnKGMlagtqt22BYqrR1IJUNMtnRSajpDBxnBlJCexy' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'BFVUEyLKlfcdP0HYx5jzazcL5u9obEeTn6c7dJU/Qrpou6DTa44YF4YpP3Rhrhs1' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'g2l6AldzJqtyfISRhL23iJz7MPScIDa4FkGcp62f1qtBt11304RNXnfrqRPEjipu' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'aHsuel04KMsOP70/psE5/QUtRQMH/MzBVbjRog1XFEtJpDd+ZIUpkqYb24aOgXLO' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'kEkbJnCQyiJBIm9jS3ilymfT0x869TXEUaPlOwIDAQABAoIBAGEttRi3TBUw+HsC' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'CsMnp3cTcMZJCKme4D7Pkh3Ro7sPTVy+eQOCxSe49qb2b018MfsbGPVsEyo3+EfT' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'QPa5blpuHF+Y93UB1MKAgIlugyvQ8HYSxfkmaolATUvYeIhK8gyGvzo0XoFKPbXX' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'A7eGRBLInnNP54P5yFs3/3kw+UpvSO/rWme06VO/itjXDMxw0q+H0CcbxQ/M9V9p' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'ptrZ4E9MzKAcCIW4vy7N7IpTGCwol6UUORJ0PeBnuj3INc1v/b015IhsTXeggb4O' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'Z6oAMZsGpo4bQLGo7Ze3Og0OyCNXHPYb2dwmgfXwedBDWZoyy72eT8Abh1FM2aBE' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'qf9ohLkCgYEAzHPeUkZRZ6rJ0v3VAXBHYYwVJJYUfGFgpMk38Uf09ha/7CWooMHU' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'tOTl+V9yCot2md2SOYmBLp/1uMyPXQbWvzhjGkv1+rYbh2VYhr2AmWx7Wq4C+PPv' >> /home/ec2-user/my-safe-directory/ca.key
                echo '9eUXkp3Qx7LwFl+jGsoHHcAVks07gNMUSiPW9xsfVAry84u4QrORbh8CgYEA7KdO' >> /home/ec2-user/my-safe-directory/ca.key
                echo 's07YmPU3l2O5Q4mQXBHkbyCp2GwOPYyvEMxF5UV5H++TOjml3eHqT9TBYUbvueH8' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'Ajk2dGsaGcxVMPxSk7AzELcfhFWH9UtSfBA/XSUPTbSp01/1PzYKlAeCH6dpf+jq' >> /home/ec2-user/my-safe-directory/ca.key
                echo '/7kJNzu3lH8PvwtxNNIC/bL5KMQPyGE64KoYLWUCgYEAmyvltHQCHLgW7bgRDkJ1' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'Kqfy9A2kBrKxct/1QX7ngE7L4yLB1SDHm3OOx7GVEEPBBA6SiHDARu7IxDUdKfGi' >> /home/ec2-user/my-safe-directory/ca.key
                echo '0was0KyOSHYmdqCIi9sP22HmTXB8eQ5LNUlmlrSIXMiGR7TWSeLDe+Tper2hR6js' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'YUjKQkmngVW+BvIoKxe2bOkCgYAsucoT9VjWP7IL+Jrw+rS/0dncbs3qyzE9zLLh' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'd9nV5PVpZbvriy2f66x+/fS2T9PKy7z3Jpz2D6/VJFsNcQKiSvC7vgBE4G1bnKqw' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'K9nt3q0vwG9ANaiCE9KX+3tKRDeaJwkS34OwXqbpd8IgFyeEFhTeoc6ZN8TL2CRq' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'hXsgSQKBgDWNl05PYGRa9NAgzGCH0+QLgWW1AxQuD7PSgZDHLNOqvPXRbzgJIM/E' >> /home/ec2-user/my-safe-directory/ca.key
                echo '3P/bKcKJAWG2muwb0m1JM8D+twaHE/QMxULkUzYtQ2nlCM6OhFYNEHkjmoB7UFA3' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'IaJVqjBQe91P0IKCSkZF7wFHz1YdKgjvSQOXlHD2I+MwyPF4UG6o' >> /home/ec2-user/my-safe-directory/ca.key
                echo '-----END RSA PRIVATE KEY-----' >> /home/ec2-user/my-safe-directory/ca.key
                echo '-----BEGIN CERTIFICATE-----' > /home/ec2-user/certs/ca.crt
                echo 'MIIDJTCCAg2gAwIBAgIQDm0RAwm/Sn2RhyT5ojkTmjANBgkqhkiG9w0BAQsFADAr' >> /home/ec2-user/certs/ca.crt
                echo 'MRIwEAYDVQQKEwlDb2Nrcm9hY2gxFTATBgNVBAMTDENvY2tyb2FjaCBDQTAeFw0y' >> /home/ec2-user/certs/ca.crt
                echo 'MTEyMjIxNzE0MTBaFw0zMTEyMzExNzE0MTBaMCsxEjAQBgNVBAoTCUNvY2tyb2Fj' >> /home/ec2-user/certs/ca.crt
                echo 'aDEVMBMGA1UEAxMMQ29ja3JvYWNoIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A' >> /home/ec2-user/certs/ca.crt
                echo 'MIIBCgKCAQEAvQBvZGI4uUlVHD4REnyofo9D6JWQY13kSIkuOUur49paFkIfmpeR' >> /home/ec2-user/certs/ca.crt
                echo 'SIu2u5yGf6xd7Oi3H/QnKGMlagtqt22BYqrR1IJUNMtnRSajpDBxnBlJCexyBFVU' >> /home/ec2-user/certs/ca.crt
                echo 'EyLKlfcdP0HYx5jzazcL5u9obEeTn6c7dJU/Qrpou6DTa44YF4YpP3Rhrhs1g2l6' >> /home/ec2-user/certs/ca.crt
                echo 'AldzJqtyfISRhL23iJz7MPScIDa4FkGcp62f1qtBt11304RNXnfrqRPEjipuaHsu' >> /home/ec2-user/certs/ca.crt
                echo 'el04KMsOP70/psE5/QUtRQMH/MzBVbjRog1XFEtJpDd+ZIUpkqYb24aOgXLOkEkb' >> /home/ec2-user/certs/ca.crt
                echo 'JnCQyiJBIm9jS3ilymfT0x869TXEUaPlOwIDAQABo0UwQzAOBgNVHQ8BAf8EBAMC' >> /home/ec2-user/certs/ca.crt
                echo 'AuQwEgYDVR0TAQH/BAgwBgEB/wIBATAdBgNVHQ4EFgQUO/9ViWjopIpC8OD5tMVT' >> /home/ec2-user/certs/ca.crt
                echo 'nxwRbMkwDQYJKoZIhvcNAQELBQADggEBALplxolVuvzzIHNfx4fPw2oCwcC4cBEW' >> /home/ec2-user/certs/ca.crt
                echo 'x/cy4al48biFM7GnuCUJvZRcll8urCiw4J5utDuzDphWjftW2KXD8ZTctVxQ3Dli' >> /home/ec2-user/certs/ca.crt
                echo 'mKBfAZPocMUKwTlBqWGNJBSuv7WDBLlIkZDHOP404vIs0Ddl+gEqarU3VS49zY7/' >> /home/ec2-user/certs/ca.crt
                echo 'Ip9YN7Ch8dBGaBK1/5O2hetnsvV9ayRgQfhcvN87CRmXIqA8/SFZ8KHq7PvWVLYa' >> /home/ec2-user/certs/ca.crt
                echo 'zsuodS2Txf3Z1n/s8h8GbYFdUFDcYk/n5Tb7/BfunsAWUPrH8/0uF3xZn+SlTRVF' >> /home/ec2-user/certs/ca.crt
                echo 'hrg+esTLJlTzrQMAZdIE7jpN/CYyP0A/usQi03LTerr2vfv00xU+Mz8=' >> /home/ec2-user/certs/ca.crt
                echo '-----END CERTIFICATE-----' >> /home/ec2-user/certs/ca.crt
                chown ec2-user:ec2-user /home/ec2-user/certs/ca.crt
                chown ec2-user:ec2-user /home/ec2-user/my-safe-directory/ca.key
                chmod 640 /home/ec2-user/certs/ca.crt
                chmod 600 /home/ec2-user/my-safe-directory/ca.key     
                echo "export ip_local=\`curl http://169.254.169.254/latest/meta-data/local-ipv4\`" >> /home/ec2-user/.bashrc
                echo "export ip_public=\`curl http://169.254.169.254/latest/meta-data/public-ipv4\`" >> /home/ec2-user/.bashrc
                echo "export aws_region=\`curl http://169.254.169.254/latest/meta-data/placement/region\`" >> /home/ec2-user/.bashrc
                echo "export aws_az=\`curl http://169.254.169.254/latest/meta-data/placement/availability-zone\`" >> /home/ec2-user/.bashrc
                echo "export COCKROACH_CERTS_DIR=/home/ec2-user/certs" >> /home/ec2-user/.bashrc
                echo "export JOIN_STR=${CRDBIPNode01.PrimaryPrivateIpAddress},${CRDBIPNode02.PrimaryPrivateIpAddress},${CRDBIPNode03.PrimaryPrivateIpAddress}" >> /home/ec2-user/.bashrc
                echo "export COCKROACH_CERTS_DIR=/home/ec2-user/certs" >> /home/ec2-user/.bashrc
                echo "export CRDBNODE=3" >> /home/ec2-user/.bashrc
                echo "STARTCRDB() {" >> /home/ec2-user/.bashrc
                echo "  cockroach start \\" >> /home/ec2-user/.bashrc
                echo '  --locality=region="$aws_region",zone="$aws_az" \' >> /home/ec2-user/.bashrc
                echo "  --certs-dir=certs \\" >> /home/ec2-user/.bashrc
                echo '  --advertise-addr=$ip_local \' >> /home/ec2-user/.bashrc
                echo '  --join=$JOIN_STR \' >> /home/ec2-user/.bashrc
                echo "  --background " >> /home/ec2-user/.bashrc
                echo " }" >> /home/ec2-user/.bashrc
                echo "CREATENODECERT() {" >> /home/ec2-user/.bashrc
                echo "  cockroach cert create-node \\" >> /home/ec2-user/.bashrc
                echo '  $ip_local \' >> /home/ec2-user/.bashrc
                echo '  $ip_public \' >> /home/ec2-user/.bashrc
                echo "  localhost \\" >> /home/ec2-user/.bashrc
                echo "  127.0.0.1 \\" >> /home/ec2-user/.bashrc
                echo "  --certs-dir=certs \\" >> /home/ec2-user/.bashrc
                echo "  --ca-key=my-safe-directory/ca.key" >> /home/ec2-user/.bashrc
                echo "}" >> /home/ec2-user/.bashrc
                echo "CREATEROOTCERT() {" >> /home/ec2-user/.bashrc
                echo "  cockroach cert create-client \\" >> /home/ec2-user/.bashrc
                echo '  root \' >> /home/ec2-user/.bashrc
                echo "  --certs-dir=certs \\" >> /home/ec2-user/.bashrc
                echo "  --ca-key=my-safe-directory/ca.key" >> /home/ec2-user/.bashrc
                echo "}" >> /home/ec2-user/.bashrc           
                sleep 2m; su ec2-user -lc 'CREATENODECERT; CREATEROOTCERT; STARTCRDB'
            -
              !Sub |
                #!/bin/bash -xe
                curl https://binaries.cockroachdb.com/cockroach-v21.1.9.linux-amd64.tgz | tar -xz && cp -i cockroach-v21.1.9.linux-amd64/cockroach /usr/local/bin/
                su ec2-user -c 'mkdir /home/ec2-user/certs; mkdir /home/ec2-user/my-safe-directory'
                echo '-----BEGIN RSA PRIVATE KEY-----' > /home/ec2-user/my-safe-directory/ca.key
                echo 'MIIEowIBAAKCAQEAvQBvZGI4uUlVHD4REnyofo9D6JWQY13kSIkuOUur49paFkIf' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'mpeRSIu2u5yGf6xd7Oi3H/QnKGMlagtqt22BYqrR1IJUNMtnRSajpDBxnBlJCexy' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'BFVUEyLKlfcdP0HYx5jzazcL5u9obEeTn6c7dJU/Qrpou6DTa44YF4YpP3Rhrhs1' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'g2l6AldzJqtyfISRhL23iJz7MPScIDa4FkGcp62f1qtBt11304RNXnfrqRPEjipu' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'aHsuel04KMsOP70/psE5/QUtRQMH/MzBVbjRog1XFEtJpDd+ZIUpkqYb24aOgXLO' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'kEkbJnCQyiJBIm9jS3ilymfT0x869TXEUaPlOwIDAQABAoIBAGEttRi3TBUw+HsC' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'CsMnp3cTcMZJCKme4D7Pkh3Ro7sPTVy+eQOCxSe49qb2b018MfsbGPVsEyo3+EfT' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'QPa5blpuHF+Y93UB1MKAgIlugyvQ8HYSxfkmaolATUvYeIhK8gyGvzo0XoFKPbXX' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'A7eGRBLInnNP54P5yFs3/3kw+UpvSO/rWme06VO/itjXDMxw0q+H0CcbxQ/M9V9p' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'ptrZ4E9MzKAcCIW4vy7N7IpTGCwol6UUORJ0PeBnuj3INc1v/b015IhsTXeggb4O' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'Z6oAMZsGpo4bQLGo7Ze3Og0OyCNXHPYb2dwmgfXwedBDWZoyy72eT8Abh1FM2aBE' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'qf9ohLkCgYEAzHPeUkZRZ6rJ0v3VAXBHYYwVJJYUfGFgpMk38Uf09ha/7CWooMHU' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'tOTl+V9yCot2md2SOYmBLp/1uMyPXQbWvzhjGkv1+rYbh2VYhr2AmWx7Wq4C+PPv' >> /home/ec2-user/my-safe-directory/ca.key
                echo '9eUXkp3Qx7LwFl+jGsoHHcAVks07gNMUSiPW9xsfVAry84u4QrORbh8CgYEA7KdO' >> /home/ec2-user/my-safe-directory/ca.key
                echo 's07YmPU3l2O5Q4mQXBHkbyCp2GwOPYyvEMxF5UV5H++TOjml3eHqT9TBYUbvueH8' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'Ajk2dGsaGcxVMPxSk7AzELcfhFWH9UtSfBA/XSUPTbSp01/1PzYKlAeCH6dpf+jq' >> /home/ec2-user/my-safe-directory/ca.key
                echo '/7kJNzu3lH8PvwtxNNIC/bL5KMQPyGE64KoYLWUCgYEAmyvltHQCHLgW7bgRDkJ1' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'Kqfy9A2kBrKxct/1QX7ngE7L4yLB1SDHm3OOx7GVEEPBBA6SiHDARu7IxDUdKfGi' >> /home/ec2-user/my-safe-directory/ca.key
                echo '0was0KyOSHYmdqCIi9sP22HmTXB8eQ5LNUlmlrSIXMiGR7TWSeLDe+Tper2hR6js' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'YUjKQkmngVW+BvIoKxe2bOkCgYAsucoT9VjWP7IL+Jrw+rS/0dncbs3qyzE9zLLh' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'd9nV5PVpZbvriy2f66x+/fS2T9PKy7z3Jpz2D6/VJFsNcQKiSvC7vgBE4G1bnKqw' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'K9nt3q0vwG9ANaiCE9KX+3tKRDeaJwkS34OwXqbpd8IgFyeEFhTeoc6ZN8TL2CRq' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'hXsgSQKBgDWNl05PYGRa9NAgzGCH0+QLgWW1AxQuD7PSgZDHLNOqvPXRbzgJIM/E' >> /home/ec2-user/my-safe-directory/ca.key
                echo '3P/bKcKJAWG2muwb0m1JM8D+twaHE/QMxULkUzYtQ2nlCM6OhFYNEHkjmoB7UFA3' >> /home/ec2-user/my-safe-directory/ca.key
                echo 'IaJVqjBQe91P0IKCSkZF7wFHz1YdKgjvSQOXlHD2I+MwyPF4UG6o' >> /home/ec2-user/my-safe-directory/ca.key
                echo '-----END RSA PRIVATE KEY-----' >> /home/ec2-user/my-safe-directory/ca.key
                echo '-----BEGIN CERTIFICATE-----' > /home/ec2-user/certs/ca.crt
                echo 'MIIDJTCCAg2gAwIBAgIQDm0RAwm/Sn2RhyT5ojkTmjANBgkqhkiG9w0BAQsFADAr' >> /home/ec2-user/certs/ca.crt
                echo 'MRIwEAYDVQQKEwlDb2Nrcm9hY2gxFTATBgNVBAMTDENvY2tyb2FjaCBDQTAeFw0y' >> /home/ec2-user/certs/ca.crt
                echo 'MTEyMjIxNzE0MTBaFw0zMTEyMzExNzE0MTBaMCsxEjAQBgNVBAoTCUNvY2tyb2Fj' >> /home/ec2-user/certs/ca.crt
                echo 'aDEVMBMGA1UEAxMMQ29ja3JvYWNoIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A' >> /home/ec2-user/certs/ca.crt
                echo 'MIIBCgKCAQEAvQBvZGI4uUlVHD4REnyofo9D6JWQY13kSIkuOUur49paFkIfmpeR' >> /home/ec2-user/certs/ca.crt
                echo 'SIu2u5yGf6xd7Oi3H/QnKGMlagtqt22BYqrR1IJUNMtnRSajpDBxnBlJCexyBFVU' >> /home/ec2-user/certs/ca.crt
                echo 'EyLKlfcdP0HYx5jzazcL5u9obEeTn6c7dJU/Qrpou6DTa44YF4YpP3Rhrhs1g2l6' >> /home/ec2-user/certs/ca.crt
                echo 'AldzJqtyfISRhL23iJz7MPScIDa4FkGcp62f1qtBt11304RNXnfrqRPEjipuaHsu' >> /home/ec2-user/certs/ca.crt
                echo 'el04KMsOP70/psE5/QUtRQMH/MzBVbjRog1XFEtJpDd+ZIUpkqYb24aOgXLOkEkb' >> /home/ec2-user/certs/ca.crt
                echo 'JnCQyiJBIm9jS3ilymfT0x869TXEUaPlOwIDAQABo0UwQzAOBgNVHQ8BAf8EBAMC' >> /home/ec2-user/certs/ca.crt
                echo 'AuQwEgYDVR0TAQH/BAgwBgEB/wIBATAdBgNVHQ4EFgQUO/9ViWjopIpC8OD5tMVT' >> /home/ec2-user/certs/ca.crt
                echo 'nxwRbMkwDQYJKoZIhvcNAQELBQADggEBALplxolVuvzzIHNfx4fPw2oCwcC4cBEW' >> /home/ec2-user/certs/ca.crt
                echo 'x/cy4al48biFM7GnuCUJvZRcll8urCiw4J5utDuzDphWjftW2KXD8ZTctVxQ3Dli' >> /home/ec2-user/certs/ca.crt
                echo 'mKBfAZPocMUKwTlBqWGNJBSuv7WDBLlIkZDHOP404vIs0Ddl+gEqarU3VS49zY7/' >> /home/ec2-user/certs/ca.crt
                echo 'Ip9YN7Ch8dBGaBK1/5O2hetnsvV9ayRgQfhcvN87CRmXIqA8/SFZ8KHq7PvWVLYa' >> /home/ec2-user/certs/ca.crt
                echo 'zsuodS2Txf3Z1n/s8h8GbYFdUFDcYk/n5Tb7/BfunsAWUPrH8/0uF3xZn+SlTRVF' >> /home/ec2-user/certs/ca.crt
                echo 'hrg+esTLJlTzrQMAZdIE7jpN/CYyP0A/usQi03LTerr2vfv00xU+Mz8=' >> /home/ec2-user/certs/ca.crt
                echo '-----END CERTIFICATE-----' >> /home/ec2-user/certs/ca.crt
                chown ec2-user:ec2-user /home/ec2-user/certs/ca.crt
                chown ec2-user:ec2-user /home/ec2-user/my-safe-directory/ca.key
                chmod 640 /home/ec2-user/certs/ca.crt
                chmod 600 /home/ec2-user/my-safe-directory/ca.key     
                echo "export ip_local=\`curl http://169.254.169.254/latest/meta-data/local-ipv4\`" >> /home/ec2-user/.bashrc
                echo "export ip_public=\`curl http://169.254.169.254/latest/meta-data/public-ipv4\`" >> /home/ec2-user/.bashrc
                echo "export aws_region=\`curl http://169.254.169.254/latest/meta-data/placement/region\`" >> /home/ec2-user/.bashrc
                echo "export aws_az=\`curl http://169.254.169.254/latest/meta-data/placement/availability-zone\`" >> /home/ec2-user/.bashrc
                echo "export JOIN_STR=${ExistingJoinString}" >> /home/ec2-user/.bashrc
                echo "export COCKROACH_CERTS_DIR=/home/ec2-user/certs" >> /home/ec2-user/.bashrc
                echo "export CRDBNODE=3" >> /home/ec2-user/.bashrc
                echo "STARTCRDB() {" >> /home/ec2-user/.bashrc
                echo "  cockroach start \\" >> /home/ec2-user/.bashrc
                echo '  --locality=region="$aws_region",zone="$aws_az" \' >> /home/ec2-user/.bashrc
                echo "  --certs-dir=certs \\" >> /home/ec2-user/.bashrc
                echo '  --advertise-addr=$ip_local \' >> /home/ec2-user/.bashrc
                echo '  --join=$JOIN_STR \' >> /home/ec2-user/.bashrc
                echo "  --background " >> /home/ec2-user/.bashrc
                echo " }" >> /home/ec2-user/.bashrc
                echo "CREATENODECERT() {" >> /home/ec2-user/.bashrc
                echo "  cockroach cert create-node \\" >> /home/ec2-user/.bashrc
                echo '  $ip_local \' >> /home/ec2-user/.bashrc
                echo '  $ip_public \' >> /home/ec2-user/.bashrc
                echo "  localhost \\" >> /home/ec2-user/.bashrc
                echo "  127.0.0.1 \\" >> /home/ec2-user/.bashrc
                echo "  --certs-dir=certs \\" >> /home/ec2-user/.bashrc
                echo "  --ca-key=my-safe-directory/ca.key" >> /home/ec2-user/.bashrc
                echo "}" >> /home/ec2-user/.bashrc
                echo "CREATEROOTCERT() {" >> /home/ec2-user/.bashrc
                echo "  cockroach cert create-client \\" >> /home/ec2-user/.bashrc
                echo '  root \' >> /home/ec2-user/.bashrc
                echo "  --certs-dir=certs \\" >> /home/ec2-user/.bashrc
                echo "  --ca-key=my-safe-directory/ca.key" >> /home/ec2-user/.bashrc
                echo "}" >> /home/ec2-user/.bashrc                
                sleep 2m; su ec2-user -lc 'CREATENODECERT; CREATEROOTCERT; STARTCRDB'
      NetworkInterfaces:
      - DeviceIndex: '0'
        NetworkInterfaceId: !Ref CRDBIPNode03

Outputs:
  StackVPC:
    Description: The ID of the VPC
    Value: !Ref CreateVPC
    Export:
      Name:  !Sub "${AWS::StackName}-VPCID"
  # SubnetPublic1:    
  #   Description: The ID of the a public subnet
  #   Value: !Ref subnet2Public
  #   Export:
  #     Name:  !Sub "${AWS::StackName}-PublicSubnet1"
  # SubnetPublic2:    
  #   Description: The ID of the a public subnet
  #   Value: !Ref subnet4Public
  #   Export:
  #     Name:  !Sub "${AWS::StackName}-PublicSubnet2"
  # SubnetPublic3:    
  #   Description: The ID of the a public subnet
  #   Value: !Ref subnet6Public
  #   Export:
  #     Name:  !Sub "${AWS::StackName}-PublicSubnet3"
  SecurityGroup1:    
    Description: The ID of the security group 1 (local access to the resources)
    Value: !Ref InstanceSecurityGroup01
    Export:
      Name:  !Sub "${AWS::StackName}-SecurityGroup1"
  SecurityGroup2:    
    Description: The ID of the security group 2 (intranode communication)
    Value: !Ref InstanceSecurityGroup02
    Export:
      Name:  !Sub "${AWS::StackName}-SecurityGroup2"
  JoinValue:
    Description:  The Join value to be copied to additional VPC Creations
    Value: !If [ UseNewJoinString, !Join [",", [ !GetAtt CRDBIPNode01.PrimaryPrivateIpAddress, !GetAtt CRDBIPNode02.PrimaryPrivateIpAddress, !GetAtt CRDBIPNode03.PrimaryPrivateIpAddress ] ], "Use Value From Primary (1st) Region" ]
    Export:
      Name: !Sub "${AWS::StackName}-JoinValue"
  # PublicSubnet01WouldBe:
  #   Description:  This is what the Private IP Would be
  #   # Get the CIDR range of the 1st public subnet, then generate 16 CIDRs (for the whole range) with a /32 and select the 4th IP address
  #   Value: !Select [ 0, !Cidr [ !Ref VpcCidrParameter, 6, 5 ]]
  # PrivateIP01WouldBe:
  #   Description:  This is what the Private IP Would be
  #   # Get the CIDR range of the 1st public subnet, then generate 16 CIDRs (for the whole range) with a /32 and select the 4th IP address
  #   Value: !Select [0, !Split ['.', !Select [0, !Cidr [ !Select [ 0, !Cidr [ !Ref VpcCidrParameter, 6, 5 ]], 16, 1] ] ] ]
  # PrivateIP02WouldBe:
  #   Description:  This is what the Private IP Would be
  #   # Get the CIDR range of the 1st public subnet, then generate 16 CIDRs (for the whole range) with a /32 and select the 4th IP address
  #   Value: !Select [1, !Split ['.', !Select [0, !Cidr [ !Select [ 0, !Cidr [ !Ref VpcCidrParameter, 6, 5 ]], 16, 1] ] ] ]
  # PrivateIP03WouldBe:
  #   Description:  This is what the Private IP Would be
  #   # Get the CIDR range of the 1st public subnet, then generate 16 CIDRs (for the whole range) with a /32 and select the 4th IP address
  #   Value: !Select [2, !Split ['.', !Select [0, !Cidr [ !Select [ 0, !Cidr [ !Ref VpcCidrParameter, 6, 5 ]], 16, 1] ] ] ]
  # PrivateIPCombined:
  #   Value: !Join 
  #   - '.' 
  #   - - !Select [0, !Split ['.', !Select [0, !Cidr [ !Select [ 0, !Cidr [ !Ref VpcCidrParameter, 6, 5 ]], 16, 1] ] ] ]
  #     - !Select [1, !Split ['.', !Select [0, !Cidr [ !Select [ 0, !Cidr [ !Ref VpcCidrParameter, 6, 5 ]], 16, 1] ] ] ]
  #     - !Select [2, !Split ['.', !Select [0, !Cidr [ !Select [ 0, !Cidr [ !Ref VpcCidrParameter, 6, 5 ]], 16, 1] ] ] ]
  # PrivateIP02WouldBe:
  #   Description:  This is what the Private IP Would be
  #   # Get the CIDR range of the 1st public subnet, then generate 16 CIDRs (for the whole range) with a /32 and select the 4th IP address
  #   Value: !Select [1, !Cidr [ !Select [ 0, !Cidr [ !Ref VpcCidrParameter, 6, 5 ]], 16, 0] ]
  # PrivateIP03WouldBe:
  #   Description:  This is what the Private IP Would be
  #   # Get the CIDR range of the 1st public subnet, then generate 16 CIDRs (for the whole range) with a /32 and select the 4th IP address
  #   Value: !Select [2, !Cidr [ !Select [ 0, !Cidr [ !Ref VpcCidrParameter, 6, 5 ]], 16, 0] ]
  # PrivateIP04WouldBe:
  #   Description:  This is what the Private IP Would be
  #   # Get the CIDR range of the 1st public subnet, then generate 16 CIDRs (for the whole range) with a /32 and select the 4th IP address
  #   Value: !Select [3, !Cidr [ !Select [ 0, !Cidr [ !Ref VpcCidrParameter, 6, 5 ]], 16, 0] ]
  # PrivateIP16WouldBe:
  #   Description:  This is what the Private IP Would be
  #   # Get the CIDR range of the 1st public subnet, then generate 16 CIDRs (for the whole range) with a /32 and select the 4th IP address
  #   Value: !Select [15, !Cidr [ !Select [ 0, !Cidr [ !Ref VpcCidrParameter, 6, 5 ]], 16, 0] ]